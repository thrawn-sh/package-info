<?xml version="1.0" encoding="UTF-8"?>
<!--

    Maven package-info.java Plugin - Autogenerates package-info.java files with arbitrary headers
    Copyright Â© 2012-2018 shadowhunt (dev@shadowhunt.de)

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program. If not, see <http://www.gnu.org/licenses/>.

-->
<ruleset>
    <rule ref="rulesets/java/basic.xml" />

    <rule ref="rulesets/java/clone.xml" />

    <rule ref="rulesets/java/controversial.xml/DontImportSun" />
    <rule ref="rulesets/java/controversial.xml/SuspiciousOctalEscape" />

    <rule ref="rulesets/java/design.xml/AbstractClassWithoutAbstractMethod" />
    <rule ref="rulesets/java/design.xml/AccessorClassGeneration" />
    <rule ref="rulesets/java/design.xml/AssignmentToNonFinalStatic" />
    <rule ref="rulesets/java/design.xml/AvoidConstantsInterface" />
    <rule ref="rulesets/java/design.xml/AvoidDeeplyNestedIfStmts" />
    <rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause" />
    <rule ref="rulesets/java/design.xml/AvoidProtectedFieldInFinalClass" />
    <rule ref="rulesets/java/design.xml/AvoidProtectedMethodInFinalClassNotExtending" />
    <rule ref="rulesets/java/design.xml/AvoidReassigningParameters" />
    <rule ref="rulesets/java/design.xml/AvoidSynchronizedAtMethodLevel" />
    <rule ref="rulesets/java/design.xml/BadComparison" />
    <rule ref="rulesets/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal" />
    <rule ref="rulesets/java/design.xml/CloseResource" />
    <rule ref="rulesets/java/design.xml/CompareObjectsWithEquals" />
    <rule ref="rulesets/java/design.xml/ConfusingTernary" />
    <rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod" />
    <rule ref="rulesets/java/design.xml/DefaultLabelNotLastInSwitchStmt" />
    <rule ref="rulesets/java/design.xml/EqualsNull" />
    <rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic" />
    <rule ref="rulesets/java/design.xml/IdempotentOperations" />
    <rule ref="rulesets/java/design.xml/ImmutableField" />
    <rule ref="rulesets/java/design.xml/InstantiationToGetClass" />
    <rule ref="rulesets/java/design.xml/LogicInversion" />
    <rule ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass" />
    <rule ref="rulesets/java/design.xml/NonCaseLabelInSwitchStatement" />
    <rule ref="rulesets/java/design.xml/NonStaticInitializer" />
    <rule ref="rulesets/java/design.xml/NonThreadSafeSingleton" />
    <rule ref="rulesets/java/design.xml/OptimizableToArrayCall" />
    <rule ref="rulesets/java/design.xml/PositionLiteralsFirstInCaseInsensitiveComparisons" />
    <rule ref="rulesets/java/design.xml/PositionLiteralsFirstInComparisons" />
    <rule ref="rulesets/java/design.xml/PreserveStackTrace" />
    <rule ref="rulesets/java/design.xml/SimplifyBooleanExpressions" />
    <rule ref="rulesets/java/design.xml/SimplifyBooleanReturns" />
    <rule ref="rulesets/java/design.xml/SimplifyConditional" />
    <rule ref="rulesets/java/design.xml/SingularField" />
    <rule ref="rulesets/java/design.xml/SwitchDensity" />
    <rule ref="rulesets/java/design.xml/SwitchStmtsShouldHaveDefault" />
    <rule ref="rulesets/java/design.xml/TooFewBranchesForASwitchStatement" />
    <rule ref="rulesets/java/design.xml/UncommentedEmptyConstructor" />
    <rule ref="rulesets/java/design.xml/UncommentedEmptyMethod" />
    <rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn" />
    <rule ref="rulesets/java/design.xml/UnsynchronizedStaticDateFormatter" />
    <rule ref="rulesets/java/design.xml/UseCollectionIsEmpty" />
    <rule ref="rulesets/java/design.xml/UseLocaleWithCaseConversions" />
    <rule ref="rulesets/java/design.xml/UseNotifyAllInsteadOfNotify" />
    <rule ref="rulesets/java/design.xml/UseUtilityClass" />
    <rule ref="rulesets/java/design.xml/UseVarargs" />

    <rule ref="rulesets/java/empty.xml" />

    <rule ref="rulesets/java/finalizers.xml" />

    <rule ref="rulesets/java/imports.xml" />

    <rule ref="rulesets/java/logging-java.xml" />

    <rule ref="rulesets/java/naming.xml/AvoidDollarSigns" />
    <rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingMethodName" />
    <rule ref="rulesets/java/naming.xml/AvoidFieldNameMatchingTypeName" />
    <rule ref="rulesets/java/naming.xml/BooleanGetMethodName" />
    <rule ref="rulesets/java/naming.xml/ClassNamingConventions" />
    <rule ref="rulesets/java/naming.xml/GenericsNaming" />
    <rule ref="rulesets/java/naming.xml/MethodNamingConventions" />
    <rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass" />
    <rule ref="rulesets/java/naming.xml/MisleadingVariableName" />
    <rule ref="rulesets/java/naming.xml/NoPackage" />
    <rule ref="rulesets/java/naming.xml/PackageCase" />
    <rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName" />
    <rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName" />
    <rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName" />
    <rule ref="rulesets/java/naming.xml/VariableNamingConventions" />

    <rule ref="rulesets/java/optimizations.xml/AddEmptyString" />
    <rule ref="rulesets/java/optimizations.xml/AvoidArrayLoops" />
    <rule ref="rulesets/java/optimizations.xml/AvoidInstantiatingObjectsInLoops" />
    <rule ref="rulesets/java/optimizations.xml/LocalVariableCouldBeFinal" />
    <rule ref="rulesets/java/optimizations.xml/MethodArgumentCouldBeFinal" />
    <rule ref="rulesets/java/optimizations.xml/PrematureDeclaration" />
    <rule ref="rulesets/java/optimizations.xml/SimplifyStartsWith" />
    <rule ref="rulesets/java/optimizations.xml/UnnecessaryWrapperObjectCreation" />
    <rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector" />
    <rule ref="rulesets/java/optimizations.xml/UseArraysAsList" />
    <rule ref="rulesets/java/optimizations.xml/UseStringBufferForStringAppends" />

    <rule ref="rulesets/java/strictexception.xml" />

    <rule ref="rulesets/java/strings.xml/AppendCharacterWithChar" />
    <rule ref="rulesets/java/strings.xml/InefficientEmptyStringCheck" />
    <rule ref="rulesets/java/strings.xml/InefficientStringBuffering" />
    <rule ref="rulesets/java/strings.xml/StringBufferInstantiationWithChar" />
    <rule ref="rulesets/java/strings.xml/StringInstantiation" />
    <rule ref="rulesets/java/strings.xml/StringToString" />
    <rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange" />
    <rule ref="rulesets/java/strings.xml/UseEqualsToCompareStrings" />
    <rule ref="rulesets/java/strings.xml/UseIndexOfChar" />
    <rule ref="rulesets/java/strings.xml/UseStringBufferLength" />
    <rule ref="rulesets/java/strings.xml/UselessStringValueOf" />

    <rule ref="rulesets/java/sunsecure.xml" />

    <rule ref="rulesets/java/typeresolution.xml" />

    <rule ref="rulesets/java/unnecessary.xml/UnnecessaryConversionTemporary" />
    <rule ref="rulesets/java/unnecessary.xml/UnnecessaryFinalModifier" />
    <rule ref="rulesets/java/unnecessary.xml/UnnecessaryReturn" />
    <rule ref="rulesets/java/unnecessary.xml/UnusedNullCheckInEquals" />
    <rule ref="rulesets/java/unnecessary.xml/UselessOperationOnImmutable" />
    <rule ref="rulesets/java/unnecessary.xml/UselessOverridingMethod" />

    <rule ref="rulesets/java/unusedcode.xml" />
</ruleset>
